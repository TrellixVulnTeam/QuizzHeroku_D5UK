{"version":3,"sources":["./src/app/components/usuario/login/login.component.ts","./src/app/components/usuario/login/login.component.html","./src/app/components/usuario/register/register.component.ts","./src/app/components/usuario/register/register.component.html","./src/app/services/error.service.ts","./src/app/components/usuario/verificar-correo/verificar-correo.component.ts","./src/app/components/usuario/verificar-correo/verificar-correo.component.html","./src/app/components/usuario/recuperar-password/recuperar-password.component.ts","./src/app/components/usuario/recuperar-password/recuperar-password.component.html","./src/app/components/usuario/usuario-routing.module.ts","./src/app/components/usuario/usuario.module.ts"],"names":[],"mappings":"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","file":"components-usuario-usuario-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from 'src/app/interfaces/User';\nimport { ErrorService } from 'src/app/services/error.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n\n  constructor(private fb: FormBuilder,\n              private afAuth: AngularFireAuth,\n              private _errorService:ErrorService,\n              private toastr: ToastrService,\n              private router: Router,) { \n    this.loginForm = this.fb.group({\n      usuario: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  login(){\n    const usuario = this.loginForm.get('usuario')?.value;\n    const password = this.loginForm.get('password')?.value;\n\n    this.loading = true;\n    this.afAuth.signInWithEmailAndPassword(usuario,password).then((respuesta) =>{\n      // No puse la validacion del correo que va aca\n      this.setLocalStorage(respuesta.user);\n      this.router.navigate(['/dashboard']);\n      this.loading = false;\n    }, error => {\n      this.loading = false;\n      this.toastr.error(this._errorService.error(error.code), 'Error')\n      this.loginForm.reset();\n    })\n  }\n\n  setLocalStorage(user: any) {\n    const usuario: User = {\n      uid: user.uid,\n      email: user.email\n    }\n\n    localStorage.setItem('user', JSON.stringify(usuario));\n  }\n}\n","<div class=\"conteiner mt-5\">\n    <div *ngIf=\"loading\" class=\"d-flex justify-content-center mt-5\">\n        <app-spinner></app-spinner>\n    </div>\n    <div *ngIf=\"!loading\" class=\"row\">\n        <div class=\"col-lg-6 offset-lg-3\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h2 class=\"text-center titulo\">Login</h2>\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                        <div class=\"mb-3\">\n                            <input type=\"text\" formControlName=\"usuario\" class=\"form-control form-control-lg\" placeholder=\"Correo\">\n                            <span class=\"text-danger\" \n                            *ngIf=\"loginForm.get('usuario')?.hasError('required') && loginForm.get('usuario')?.touched\">\n                                El correo <strong>es requerido</strong>\n                            </span>\n                            <span class=\"text-danger\" *ngIf=\"loginForm.get('usuario')?.hasError('email') && loginForm.get('usuario')?.touched\">\n                                Correo <strong>invalido</strong>\n                            </span>\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"password\" formControlName=\"password\" class=\"form-control form-control-lg\" placeholder=\"Contraseña\">\n                            <span class=\"text-danger\" \n                            *ngIf=\"loginForm.get('password')?.hasError('required') && loginForm.get('password')?.touched\">\n                                El password <strong>es requerido</strong>\n                            </span>\n                        </div>\n                        <button class=\"btn btn-secondary btn-lg\" routerLink=\"/\">Volver</button>\n                        <button type=\"submit\" [disabled]=\"loginForm.invalid\" class=\"btn btn-primary btn-lg float-end\">Aceptar</button>\n                    </form>\n                    <br>\n                    <div class=\"text-center\">\n                        <a routerLink=\"/usuario/register\">Registrarse</a>\n                        <br>\n                        <a routerLink=\"/usuario/recuperarPassword\">Recuperar Password</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ErrorService } from 'src/app/services/error.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  loading = false;\n\n  //// private toastr: ToastrService\n  constructor(private fb: FormBuilder,\n              private afAuth: AngularFireAuth,\n              private router: Router,\n              private toastr: ToastrService,\n              private _errorService: ErrorService) { \n    this.registerForm = this.fb.group({\n      usuario: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", [Validators.required, Validators.minLength(6)]],\n      repetirPassword: [\"\"]\n    },{ validator: this.checkPassword })\n  }\n\n  ngOnInit(): void {\n  }\n\n  register(){\n    const usuario = this.registerForm.get('usuario')?.value;\n    const password = this.registerForm.get('password')?.value;\n    this.loading = true;\n    this.afAuth.createUserWithEmailAndPassword(usuario,password).then(rta =>{\n      console.log(rta);\n      this.toastr.success('El usuario fue registrado con exito!', 'Usuario registrado!');\n      this.router.navigate(['/usuario'])\n    }).catch(error => {\n      this.registerForm.reset();\n      this.loading = false;\n      this.toastr.error(this._errorService.error(error.code), 'Error');\n      //this.toastr.error(this.error(error.code),'Error')\n    })\n  }  \n\n//  error(code: string): string {\n\n//     switch (code) {\n\n//       // Email ya registrado\n//       case 'auth/email-already-in-use':\n//         return 'El Correo ya esta registrado'\n\n//       // Correo invalido\n//       case 'auth/invalid-email':\n//         return 'El Correo es invalido'\n\n//       // La Contraseña es muy debil\n//       case 'auth/weak-password':\n//         return 'La Contraseña es muy debil'\n\n//       default:\n//         return 'Error desconocido';\n//     }\n//   } \n\n  checkPassword(group: FormGroup): any{\n    const pass = group.controls.password?.value;\n    const confirmarPassword = group.controls.repetirPassword?.value;\n    return pass === confirmarPassword ? null : { notSame: true }\n  }  \n}\n","<div class=\"conteiner mt-5\">\n    <div *ngIf=\"loading\" class=\"d-flex justify-content-center mt-5\">\n        <app-spinner></app-spinner>\n    </div>\n    <div *ngIf=\"!loading\" class=\"row\">\n        <div class=\"col-lg-6 offset-lg-3\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h3 class=\"text-center titulo\">Registrar Usuario</h3>\n                    <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n                        <div class=\"mb-3\">\n                            <input type=\"text\" formControlName=\"usuario\" class=\"form-control form-control-lg\" placeholder=\"Correo\">\n                            <span class=\"text-danger\"\n                            *ngIf=\"registerForm.get('usuario')?.hasError('required') && registerForm.get('usuario')?.touched\">\n                                El Correo <strong>es requerido</strong>\n                            </span>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registerForm.get('usuario')?.hasError('email') && registerForm.get('usuario')?.touched\">\n                                Correo <strong>invalido</strong>\n                            </span>\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"password\" formControlName=\"password\" class=\"form-control form-control-lg\" placeholder=\"Contraseña\">\n                            <span class=\"text-danger\"\n                            *ngIf=\"registerForm.get('password')?.hasError('required') && registerForm.get('password')?.touched\">\n                                La Contraseña <strong>es requerido</strong>\n                            </span>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registerForm.get('password')?.hasError('minlength') && registerForm.get('password')?.touched\">\n                                La Contraseña como minimo<strong>debe tener 6 caracteres</strong>\n                            </span>\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"password\" formControlName=\"repetirPassword\"class=\"form-control form-control-lg\" placeholder=\"Repetir Contraseña\">\n                            <span class=\"text-danger\" *ngIf=\"registerForm.hasError('notSame')\">\n                                Contraseñas <strong>distintas</strong>\n                            </span>\n                        </div>\n                        <button routerLink=\"/usuario\" class=\"btn btn-secondary btn-lg\">Vover</button>\n                        <button type=\"submit\" [disabled]=\"registerForm.invalid\" class=\"btn btn-primary btn-lg float-end\">Aceptar</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  constructor() { }\n\n  error(code: string): string {\n\n    switch (code) {\n  \n      // Email ya registrado\n      case 'auth/email-already-in-use':\n        return 'El Correo ya esta registrado'\n  \n      // Correo invalido\n      case 'auth/invalid-email':\n        return 'El Correo es invalido'\n  \n      // La Contraseña es muy debil\n      case 'auth/weak-password':\n        return 'La Contraseña es muy debil'\n      \n      //Usuario invalido\n      case 'auth/user-not-found':\n          return 'Usuario invalido'\n  \n      //La Contraseña es invalida\n      case 'auth/wrong-password':\n          return 'La Contraseña es invalida'  \n  \n      default:\n        return 'Error desconocido';\n    }\n  } \n\n}\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-verificar-correo',\n  templateUrl: './verificar-correo.component.html',\n  styleUrls: ['./verificar-correo.component.css']\n})\nexport class VerificarCorreoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>verificar-correo works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-recuperar-password',\n  templateUrl: './recuperar-password.component.html',\n  styleUrls: ['./recuperar-password.component.css']\n})\nexport class RecuperarPasswordComponent implements OnInit {\n  recuperarForm: FormGroup;\n  \n  constructor(private fb: FormBuilder) { \n    this.recuperarForm = this.fb.group({\n      usuario: ['',[Validators.required, Validators.email]]\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  recuperarPassword(){\n\n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"row\">\n        <div class=\"col-lg-6 offset-lg-3\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h3 class=\"text-center titulo\">Recuparar Contraseña</h3>\n                    <form [formGroup]=\"recuperarForm\" (ngSubmit)=\"recuperarPassword()\">\n                        <div class=\"mb-3\">\n                            <input type=\"text\" formControlName=\"usuario\" class=\"text form-control form-control-lg\" placeholder=\"Ingrese su correo...\">\n                            <div class=\"text-danger\" \n                                *ngIf=\"recuperarForm.get('usuario')?.hasError('required') && recuperarForm.get('usuario')?.touched\">\n                                El correo <strong>es obligatorio</strong>\n                            </div>\n                            <div class=\"text-danger\" \n                                *ngIf=\"recuperarForm.get('usuario')?.hasError('email') && recuperarForm.get('usuario')?.touched\">\n                                Correo <strong>invalido</strong>\n                            </div>\n                        </div>\n                    </form>\n                    <button routerLink=\"/usuario\" class=\"btn btn-secondary btn-lg\"> Voler</button>\n                    <button type=\"submit\" [disabled]=\"recuperarForm.invalid\" class=\"btn btn-primary btn-lg float-end\"> Aceptar</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RecuperarPasswordComponent } from './recuperar-password/recuperar-password.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'recuperarPassword', component: RecuperarPasswordComponent},\n  {path: 'register', component: RegisterComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsuarioRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UsuarioRoutingModule } from './usuario-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n//Componentes\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { RecuperarPasswordComponent } from './recuperar-password/recuperar-password.component';\nimport { VerificarCorreoComponent } from './verificar-correo/verificar-correo.component';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    RecuperarPasswordComponent,\n    VerificarCorreoComponent\n    \n  ],\n  imports: [\n    CommonModule,\n    UsuarioRoutingModule,\n    SharedModule\n  ]\n})\nexport class UsuarioModule { }\n"],"sourceRoot":"webpack:///"}